<blocks app="Snap! 4.0, http://snap.berkeley.edu" version="1"><block-definition s="tocar no pino %&apos;pin&apos; tom com frequencia %&apos;frequency&apos;" type="command" category="arduino"><header></header><code></code><inputs><input type="%n"></input><input type="%n"></input></inputs><script><block s="doRun"><block s="reportJSFunction"><list><l>pin</l><l>frequency</l></list><l>var freqStr = frequency.toString();&#xD;var array = [0xF0, 0x08, pin];&#xD;for (i = 0; i &lt; freqStr.length; i++){&#xD;	array.push(freqStr.charCodeAt(i));&#xD;}&#xD;array.push(0xF7);&#xD;this.arduino.board.sp.write(new Buffer(array));</l></block><list><block var="pin"/><block var="frequency"/></list></block></script></block-definition><block-definition s="parar de tocar no pino %&apos;pin&apos;" type="command" category="arduino"><header></header><code></code><inputs><input type="%s"></input></inputs><script><block s="doRun"><block s="reportJSFunction"><list><l>pin</l></list><l>this.arduino.board.sp.write(new Buffer([0xF0, 0x09, pin, 0xF7]));</l></block><list><block var="pin"/></list></block></script></block-definition><block-definition s="configurar pino digital %&apos;PIN&apos; como entrada %&apos;MODE&apos;" type="command" category="arduino"><header></header><code></code><inputs><input type="%n">2</input><input type="%txt" readonly="true">padrão<options>padrão
pullup</options></input></inputs><script><block s="doRun"><block s="reportJSFunction"><list><l>pin</l><l>mode</l></list><l>if (this.arduino.isBoardReady()) {&#xD;    var board = this.arduino.board; &#xD;    board.pinMode(pin, board.MODES.INPUT);&#xD;    if (mode == "padrão") board.digitalWrite(pin,0);&#xD;    if (mode == "pullup") board.digitalWrite(pin,1);&#xD;    board.reportDigitalPin(pin,1);&#xD;} else {&#xD;    throw new Error(localize(&apos;Arduino not connected&apos;));		&#xD;}</l></block><list><block var="PIN"/><block var="MODE"/></list></block></script></block-definition><block-definition s="mapear %&apos;valor&apos; de %&apos;ent_min&apos; a %&apos;ent_max&apos; para %&apos;sai_min&apos; a %&apos;sai_max&apos;" type="reporter" category="arduino"><header></header><code></code><inputs><input type="%s"></input><input type="%s"></input><input type="%s"></input><input type="%s"></input><input type="%s"></input></inputs><script><block s="doReport"><block s="reportSum"><block s="reportQuotient"><block s="reportProduct"><block s="reportDifference"><block var="valor"/><block var="ent_min"/></block><block s="reportDifference"><block var="sai_max"/><block var="sai_min"/></block></block><block s="reportDifference"><block var="ent_max"/><block var="ent_min"/></block></block><block var="sai_min"/></block></block></script></block-definition></blocks>